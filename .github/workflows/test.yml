name: Test

on:
  pull_request:
  # Due to use of staging and not be able to clean up published dandisets
  # https://github.com/dandi/dandi-api/issues/476
  # do testing only sparingly (once a week).  cron run on drogon will do the
  # in-use "testing".
  #push:
  #  branches:
  #    - master
  schedule:
    - cron: '0 6 * * 0'

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
        noxenv: [test]
        include:
          - python-version: '3.8'
            noxenv: typing
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install --upgrade --upgrade-strategy=eager datalad-installer nox

      - name: Install git-annex
        run: |
          datalad-installer --sudo ok neurodebian git-annex -m neurodebian
          # make standalone git take precendence to guarantee compatibility with git-annex
          echo "/usr/lib/git-annex.linux/" >> $GITHUB_PATH

      - name: Install hdf5
        if: matrix.python-version == '3.9'
        run: sudo apt-get update && sudo apt-get install -y libhdf5-dev

      - name: Configure Git
        run: |
          git config --global user.email "github@test.test"
          git config --global user.name "GitHub Almighty"

      - name: Run tests with coverage
        if: matrix.noxenv == 'test'
        run: nox -e test -- --cov-report=xml
        working-directory: tools
        env:
          DANDI_API_KEY: ${{ secrets.DANDI_API_KEY }}

      - name: Run generic tests
        if: matrix.noxenv != 'test'
        run: nox -e ${{ matrix.noxenv }}
        working-directory: tools

      - name: Upload coverage to Codecov
        if: matrix.noxenv == 'test'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          files: tools/coverage.xml

# vim:set et sts=2:
